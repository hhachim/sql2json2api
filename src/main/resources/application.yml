spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: always
app:
  sql:
    directory: sql
    execution-order:
      - "GET_users.sql"
      - "POST_order.sql"
      - "GET_toto_non_existant.sql"
      - "TEST_httpbin.sql"
  template:
    directory: templates/json
  batch:
    size: 10
    delay: 500
  retry:
    max-attempts: 3        # Nombre maximum de tentatives
    delay-ms: 2000         # Délai initial entre les tentatives (ms)
    backoff-multiplier: 1.5 # Multiplicateur pour le délai entre les tentatives
  threading:
    enabled: false
    pool-size: 4
    queue-capacity: 100
    timeout-seconds: 60
    submission-delay-ms: 50
api:
  auth:
    url: ${API_BASE_URL}${API_AUTH_ROUTE}
    username: ${API_AUTH_USERNAME}
    password: ${API_AUTH_PASSWORD}
    token-ttl: ${API_AUTH_TOKEN_TTL} # 3600
    # Chemin vers le template d'authentification
    payload-template-path: auth-payload.ftlh
    token: ${API_AUTH_TOKEN:}  # Token prédéfini optionnel
    mode: "auto"  # Mode par défaut: utilise le token configuré s'il existe, sinon génère un nouveau token, ou "configured" si vous souhaitez forcer l'utilisation du token configuré ou "generated" si vous souhaitez forcer la génération d'un nouveau token
  base-url: ${API_BASE_URL} # URL de base pour les appels API

logging:
  level:
    root: INFO
    com.etljobs.sql2json2api: DEBUG
    org.springframework.jdbc.core: DEBUG